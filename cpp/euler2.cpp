//euler2.cpp

/*
# Problem statement:
# Each new term in the Fibbonacci sequence is generated by summing the
# previous two terms. Starting with 1 and 2, the first ten terms will be
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89.
# By considering the terms in the Fibbonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.

*/
#include<iostream>
using namespace std;

int main() {
  int fib1 = 1;
  int fib2 = 2;
  int temp;

  int sum = 0;

  while (fib2 < 4000000){
    // generate the next term in the sequence;
    temp = fib2;
    fib2 += fib1;
    fib1 = temp;

    // if the term is even, add it to the sum.
    if (fib2 % 2 == 0) {
      sum += fib2;
    }

  }
  cout << "The answer is: " << sum << endl;;

}
